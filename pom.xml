<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.1</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>it.test</groupId>
	<artifactId>gitflow</artifactId>
	<version>0.0.1-feature1</version>
	<name>gitflow</name>
	<description>Demo project for Spring Boot</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>17</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>com.amashchenko.maven.plugin</groupId>
				<artifactId>gitflow-maven-plugin</artifactId>
				<configuration>
					<gitFlowConfig>
						<productionBranch>master</productionBranch>
						<developmentBranch>develop</developmentBranch>
						<featureBranchPrefix>feature/</featureBranchPrefix>
						<releaseBranchPrefix>release/</releaseBranchPrefix>
						<hotfixBranchPrefix>hotfix/</hotfixBranchPrefix>
						<supportBranchPrefix>support/</supportBranchPrefix>
						<versionTagPrefix>delivery-tag/</versionTagPrefix>
						<origin>origin</origin>
					</gitFlowConfig>
					<skipTestProject>true</skipTestProject>
					<commitMessages>
						<featureStartMessage>
							Start feature - Update versions for feature
							branch
						</featureStartMessage>
						<featureFinishMessage>
							Finish feature - Update versions for
							development branch
						</featureFinishMessage>

						<hotfixStartMessage>
							Start hotfix - Update versions for hotfix
						</hotfixStartMessage>
						<hotfixFinishMessage>
							Finish hotfix - Update for next development
							version
						</hotfixFinishMessage>

						<hotfixVersionUpdateMessage>Update to hotfix version</hotfixVersionUpdateMessage>

						<releaseStartMessage>
							Start release - Update versions for release
						</releaseStartMessage>
						<releaseFinishMessage>
							Finish release - Update for next development
							version
						</releaseFinishMessage>

						<releaseVersionUpdateMessage>Update for next development version</releaseVersionUpdateMessage>

						<!-- git merge messages -->
						<!-- Default git merge commit message will be used if left empty or
							undefined. -->

						<releaseFinishMergeMessage></releaseFinishMergeMessage>
						<releaseFinishDevMergeMessage></releaseFinishDevMergeMessage>

						<featureFinishDevMergeMessage></featureFinishDevMergeMessage>

						<hotfixFinishMergeMessage></hotfixFinishMergeMessage>
						<hotfixFinishDevMergeMessage></hotfixFinishDevMergeMessage>
						<hotfixFinishReleaseMergeMessage></hotfixFinishReleaseMergeMessage>
						<hotfixFinishSupportMergeMessage></hotfixFinishSupportMergeMessage>

						<!-- / git merge messages -->

						<tagHotfixMessage>Tag hotfix</tagHotfixMessage>
						<tagReleaseMessage>Tag release</tagReleaseMessage>

						<!-- Migration Note: This was called <updateDevToAvoidConflitsMessage>
							in version 1.11.0, but has been deprecated in favour of the correctly spelt
							one below. -->
						<updateDevToAvoidConflictsMessage>
							Update develop to production
							version to avoid merge conflicts
						</updateDevToAvoidConflictsMessage>
						<updateDevBackPreMergeStateMessage>
							Update develop version back to
							pre-merge state
						</updateDevBackPreMergeStateMessage>
						<updateReleaseToAvoidConflictsMessage>
							Update release to hotfix
							version to avoid merge conflicts
						</updateReleaseToAvoidConflictsMessage>
						<updateReleaseBackPreMergeStateMessage>
							Update release version back
							to pre-merge state
						</updateReleaseBackPreMergeStateMessage>
					</commitMessages>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
